{% extends 'layout.html.twig' %}

{% block title %}
	{{ offer.title }}
{% endblock %}

{% block body %}
	<div class="homeSection">
		<div class="row justify-content-center p-3 w-100 m-0">
			<div class="col col-md-4 col-lg-10 loginBlock h-100 p-2">
				<h1 class="h2 offer-title pl-2">{{ offer.title }}</h1>
				<div class="card offer-pictures-zone m-2 p-2">
					{% if offer.pictures|length > 0 %}
						<div id="demo-test-gallery" class="demo-gallery bg-dark text-center m-2 p-2">
							{% for picture in offer.pictures %}
								<a href="{{ asset('build/images/offers/') }}{{ picture }}" data-size="1024x1024" data-med="{{ asset('build/images/offers/') }}{{ picture }}" data-med-size="1024x1024" class="demo-gallery__img--main">
									<img class="offer-pictures m-1" src="{{ asset('build/images/offers/') }}{{ picture }}" itemprop="thumbnail" alt="Photo"/>
								</a>
							{% endfor %}
						</div>
					{% else %}
						<div>
							<p class="alert alert-primary m-0 box-shadow">
								<i class="far fa-eye-slash"></i>
								Aucune photo disponible.
							</p>
						</div>
					{% endif %}
					<!-- Root element of PhotoSwipe. Must have class pswp. -->
					<div
						class="pswp" tabindex="-1" role="dialog" aria-hidden="true">

						<!-- Background of PhotoSwipe. It's a separate element, as animating opacity is faster than rgba(). -->
						<div class="pswp__bg"></div>

						<!-- Slides wrapper with overflow:hidden. -->
						<div class="pswp__scroll-wrap">

							<!-- Container that holds slides. PhotoSwipe keeps only 3 slides in DOM to save memory. -->
							<!-- don't modify these 3 pswp__item elements, data is added later on. -->
								<div class="pswp__container"> <div class="pswp__item"></div>
								<div class="pswp__item"></div>
								<div class="pswp__item"></div>
							</div>

							<!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->
							<div class="pswp__ui pswp__ui--hidden">

								<div
									class="pswp__top-bar">

									<!--  Controls are self-explanatory. Order can be changed. -->

									<div class="pswp__counter"></div>

									<button class="pswp__button pswp__button--close" title="Close (Esc)"></button>

									<button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>

									<button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

									<!-- Preloader demo https://codepen.io/dimsemenov/pen/yyBWoR -->
									<!-- element will get class pswp__preloader--active when preloader is running -->
									<div class="pswp__preloader">
										<div class="pswp__preloader__icn">
											<div class="pswp__preloader__cut">
												<div class="pswp__preloader__donut"></div>
											</div>
										</div>
									</div>
								</div>

								<div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
									<div class="pswp__share-tooltip"></div>
								</div>

								<button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>

								<button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>

								<div class="pswp__caption">
									<div class="pswp__caption__center"></div>
								</div>
							</div>
						</div>
					</div>

					<div class="row px-3">
						<div class="card col-sm-12 col-md m-2 p-2">
							<h6>
								<b>Description</b>
							</h6>
							<p>{{ offer.description }}</p>
						</div>
						<div class="card col-sm-12 col-md m-2 p-2">
							<h6>
								<b>Informations</b>
							</h6>
							{% if offerAssociation|length > 0 %}
								<div class="my-2 p-2 bg-white message-card">
									<a href="{{ path('associations_show', {'id': offerAssociation[0].id}) }}" class="discussion-link">
										<div class="d-flex">
											<div class="d-flex flex-columns align-items-center">
												{% if offerAssociation[0].picture is not empty %}
													<img src="{{ asset('build/images/associations/') }}{{ offerAssociation[0].picture }}" class="miniature mx-1" alt="miniature">
												{% else %}
													<img src="{{ asset('build/images/picture-no-image.jpg') }}" class="miniature mx-1" alt="photo">
												{% endif %}
											</div>
											<div class="flex-fill">
												<h4 class="cmnty">
													{{ offerAssociation[0].name }}
												</h4>
												<p class="text-muted">
													<i class="fas fa-map-marker-alt" style="color: #3f51b5"></i>
													{{ offerAssociation[0].city }}
												</p>
											</div>
										</div>
									</a>
								</div>
							{% endif %}

							{% if offer.type.id == 2 %}
								<div class="d-flex">
									<span class="card-badge badge-pill badge-warning text-center text-white mb-2">
										<b>Demande</b>
									</span>
								</div>
							{% endif %}
							{% if offer.isPro %}
								<div class="d-flex">
									<span class="card-badge badge-pill badge-primary text-center text-white mb-2">
										<b>Pro</b>
									</span>
								</div>
							{% endif %}
							{% if offer.createdAt|date('d-m-Y') == today|date('d-m-Y') %}
								<p>Mise en ligne : Aujourd'hui à
									{{ offer.createdAt|date('H:i') }}</p>
							{% elseif offer.createdAt|date('d-m-Y') == yesterday|date('d-m-Y') %}
								<p>Mise en ligne : Hier à
									{{ offer.createdAt|date('H:i') }}</p>
							{% else %}
								<p>Mise en ligne le :
									{{ offer.createdAt|date('d-m-Y à H:i') }}</p>
							{% endif %}
							<p>Catégorie :
								{{ offer.category.name }}</p>
							{% if user == offer.createdBy %}
								<div class="alert alert-info text-center box-shadow" role="alert">
									Votre annonce
								</div>
							{% else %}
								<button class="btn btn-primary mx-auto w-75" type="button" data-toggle="collapse" data-target="#collapseAuthor" aria-expanded="false" aria-controls="collapseExample">
									<i class="fas fa-comments"></i>
									Contacter l'annonceur
								</button>
								<div class="collapse w-75 mx-auto" id="collapseAuthor">
									<div class="offer-contact text-center p-2 mt-2">
										<h4 class="giver mb-0">
											<i class="fas fa-user"></i>
											{{ offer.createdBy.pseudonym }}</h4>
									</div>
									<div class="offer-contact m-3 p-3 mx-auto text-center">
										<p>
											<i class="fas fa-envelope"></i>
											<b>Adresse email</b>
										</p>
										<p>
											<a href="mailto:{{ offer.createdBy.email }}">{{ offer.createdBy.email }}</a>
										</p>
										{% if not offer.phoneVisible %}
											<p>
												<i class="fas fa-phone"></i>
												<b>Numéro de téléphone</b>
											</p>
											<p>
												<a href="tel:{{ offer.phoneNumber }}">{{ offer.phoneNumber }}</a>
											</p>
										{% endif %}
									</div>
									{% if user %}
										<div class="offer-contact text-center p-2 mt-2">
											<p class="m-0">
												<b>
													<i class="fas fa-paper-plane"></i>
													Message direct</b>
											</p>
											<form id="messageForm" class="form-style" method="post">
												<textarea name="message" id="message" class="form-control" placeholder="Votre texte ici..." required></textarea>
											</form>
											<button class="btn btn-success btn-block my-2" onclick="submitMessage()">Envoyer</button>
										</div>
									{% else %}
										<a href="{{ path('app_login') }}" class="btn btn-success btn-block text-white">
											<i class="fas fa-envelope"></i>
											Envoyez un message en vous identifiant ou créez un compte gratuitement
										</a>
									{% endif %}
								</div>
							{% endif %}
						</div>
					</div>
					<div class="card h_iframe m-2 p-2">
						<p>
							<i class="fas fa-map-marker-alt"></i>
							{{ offer.city }}
							{{ offer.context }}</p>
						<div id="map" style="height: 150px"></div>
					</div>
					<div class="d-flex offer-actions m-2 p-2">
						<div class="d-flex justify-content-center flex-fill">
							<a href="{{ path('offer_export', {'id': offer.id}) }}" target="_blank" class="d-flex justify-content-center flex-fill">
								<img src="{{ asset('build/icons/iconPDF.png') }}" alt="ImagePDF" class="cursorPointer" style="height: 70px; width: 70px;" title="Télécharger"/>
							</a>
						</div>
						<div class="d-flex flex-column flex-fill pl-3" style="border-left: 1px solid black;">
							{% if isFavorite %}
								<p class="cursorPointer" onclick="isFavorite()">
									<i class="fas fa-star" style="color: orange"></i>
									Favoris</p>
							{% else %}
								{% if app.user %}
									<p id="addFav" class="cursorPointer" onclick="addFavorites({{ offer.id }})">
										<i class="fas fa-star"></i>
										Favoris</p>
									<p id="isFav" class="cursorPointer d-none" onclick="isFavorite()">
										<i class="fas fa-star" style="color: orange"></i>
										Favoris</p>
								{% else %}
									<p class="cursorPointer" onclick="isNotRegistered()">
										<i class="fas fa-star"></i>
										Favoris</p>
								{% endif %}
							{% endif %}
							<a href="{{ path('offers_signal', {'id': offer.id}) }}" class="noDecorationLink" style="color: black">
								<p class="cursorPointer m-0">
									<i class="fas fa-flag"></i>
									Signaler</p>
							</a>
						</div>
					</div>
				</div>

				<script type="text/javascript">
					try {
Typekit.load();
} catch (e) {}(function () {

var initPhotoSwipeFromDOM = function (gallerySelector) {

var parseThumbnailElements = function (el) {
var thumbElements = el.childNodes,
numNodes = thumbElements.length,
items = [],
el,
childElements,
thumbnailEl,
size,
item;

for (var i = 0; i < numNodes; i++) {
el = thumbElements[i];

// include only element nodes
if (el.nodeType !== 1) {
continue;
}

childElements = el.children;

size = el.getAttribute('data-size').split('x');

// create slide object
item = {
src: el.getAttribute('href'),
w: parseInt(size[0], 10),
h: parseInt(size[1], 10),
author: el.getAttribute('data-author')
};

item.el = el; // save link to element for getThumbBoundsFn

if (childElements.length > 0) {
item.msrc = childElements[0].getAttribute('src'); // thumbnail url
if (childElements.length > 1) {
item.title = childElements[1].innerHTML; // caption (contents of figure)
}
}

var mediumSrc = el.getAttribute('data-med');
if (mediumSrc) {
size = el.getAttribute('data-med-size').split('x');
// "medium-sized" image
item.m = {
src: mediumSrc,
w: parseInt(size[0], 10),
h: parseInt(size[1], 10)
};
}
// original image
item.o = {
src: item.src,
w: item.w,
h: item.h
};

items.push(item);
}

return items;
};

// find nearest parent element
var closest = function closest(el, fn) {
return el && (fn(el) ? el : closest(el.parentNode, fn));
};

var onThumbnailsClick = function (e) {
e = e || window.event;
e.preventDefault ? e.preventDefault() : e.returnValue = false;

var eTarget = e.target || e.srcElement;

var clickedListItem = closest(eTarget, function (el) {
return el.tagName === 'A';
});

if (! clickedListItem) {
return;
}

var clickedGallery = clickedListItem.parentNode;

var childNodes = clickedListItem.parentNode.childNodes,
numChildNodes = childNodes.length,
nodeIndex = 0,
index;

for (var i = 0; i < numChildNodes; i++) {
if (childNodes[i].nodeType !== 1) {
continue;
}

if (childNodes[i] === clickedListItem) {
index = nodeIndex;
break;
}
nodeIndex++;
}

if (index >= 0) {
openPhotoSwipe(index, clickedGallery);
}
return false;
};

var photoswipeParseHash = function () {
var hash = window.location.hash.substring(1),
params = {};

if (hash.length < 5) { // pid=1
return params;
}

var vars = hash.split('&');
for (var i = 0; i < vars.length; i++) {
if (! vars[i]) {
continue;
}
var pair = vars[i].split('=');
if (pair.length < 2) {
continue;
}
params[pair[0]] = pair[1];
}

if (params.gid) {
params.gid = parseInt(params.gid, 10);
}

return params;
};

var openPhotoSwipe = function (index, galleryElement, disableAnimation, fromURL) {
var pswpElement = document.querySelectorAll('.pswp')[0],
gallery,
options,
items;

items = parseThumbnailElements(galleryElement);

// define options (if needed)
options = {

galleryUID: galleryElement.getAttribute('data-pswp-uid'),

getThumbBoundsFn: function (index) { // See Options->getThumbBoundsFn section of docs for more info
var thumbnail = items[index].el.children[0],
pageYScroll = window.pageYOffset || document.documentElement.scrollTop,
rect = thumbnail.getBoundingClientRect();

return {
x: rect.left,
y: rect.top + pageYScroll,
w: rect.width
};
},

addCaptionHTMLFn: function (item, captionEl, isFake) {
if (! item.title) {
captionEl.children[0].innerText = '';
return false;
}
captionEl.children[0].innerHTML = item.title + '<br/><small>Photo: ' + item.author + '</small>';
return true;
}

};

if (fromURL) {
if (options.galleryPIDs) {
// parse real index when custom PIDs are used
// http://photoswipe.com/documentation/faq.html#custom-pid-in-url
for (var j = 0; j < items.length; j++) {
if (items[j].pid == index) {
options.index = j;
break;
}
}
} else {
options.index = parseInt(index, 10) - 1;
}
} else {
options.index = parseInt(index, 10);
}

// exit if index not found
if (isNaN(options.index)) {
return;
}

var radios = document.getElementsByName('gallery-style');
for (var i = 0, length = radios.length; i < length; i++) {
if (radios[i].checked) {
if (radios[i].id == 'radio-all-controls') {} else if (radios[i].id == 'radio-minimal-black') {
options.mainClass = 'pswp--minimal--dark';
options.barsSize = {
top: 0,
bottom: 0
};
options.captionEl = false;
options.fullscreenEl = false;
options.shareEl = false;
options.bgOpacity = 0.85;
options.tapToClose = true;
options.tapToToggleControls = false;
}
break;
}
}

if (disableAnimation) {
options.showAnimationDuration = 0;
}

// Pass data to PhotoSwipe and initialize it
gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);

// see: http://photoswipe.com/documentation/responsive-images.html
var realViewportWidth,
useLargeImages = false,
firstResize = true,
imageSrcWillChange;

gallery.listen('beforeResize', function () {

var dpiRatio = window.devicePixelRatio ? window.devicePixelRatio : 1;
dpiRatio = Math.min(dpiRatio, 2.5);
realViewportWidth = gallery.viewportSize.x * dpiRatio;

if (realViewportWidth >= 1200 || (! gallery.likelyTouchDevice && realViewportWidth > 800) || screen.width > 1200) {
if (! useLargeImages) {
useLargeImages = true;
imageSrcWillChange = true;
}

} else {
if (useLargeImages) {
useLargeImages = false;
imageSrcWillChange = true;
}
}

if (imageSrcWillChange && ! firstResize) {
gallery.invalidateCurrItems();
}

if (firstResize) {
firstResize = false;
}

imageSrcWillChange = false;

});

gallery.listen('gettingData', function (index, item) {
if (useLargeImages) {
item.src = item.o.src;
item.w = item.o.w;
item.h = item.o.h;
} else {
item.src = item.m.src;
item.w = item.m.w;
item.h = item.m.h;
}
});

gallery.init();
};

// select all gallery elements
var galleryElements = document.querySelectorAll(gallerySelector);
for (var i = 0, l = galleryElements.length; i < l; i++) {
galleryElements[i].setAttribute('data-pswp-uid', i + 1);
galleryElements[i].onclick = onThumbnailsClick;
}

// Parse URL and open gallery if it contains #&pid=3&gid=1
var hashData = photoswipeParseHash();
if (hashData.pid && hashData.gid) {
openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);
}
};

initPhotoSwipeFromDOM('.demo-gallery');

})();

var lat = {{ coordinates[1] }};
var lon = {{ coordinates[0] }};

var points = {
"{{ offer.city }}{{ offer.context }}": {
"lat": {{ coordinates[1] }},
"lon": {{ coordinates[0] }}
}
};

var macarte = null;


function initMap() {

macarte = L.map('map').setView([
lat, lon
], 11);

L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
attribution: 'données © OpenStreetMap',
minZoom: 1,
maxZoom: 20
}).addTo(macarte);

for (point in points) {
var marker = L.marker([
points[point].lat,
points[point].lon
]).addTo(macarte);
marker.bindPopup(point);
}
}

window.onload = function () {
initMap();
};

function addFavorites(value) {
swal({
title: "Ajouter aux annonces favorites?",
text: "Veuillez confirmer l'ajout",
icon: "info",
buttons: [
"Annuler", "Confirmer"
],
dangerMode: false
}).then((willDelete) => {
if (willDelete) {
$.ajax({
url: "{{ path('favorites_new', {'id': offer.id}) }}",
type: 'POST',
data: {
offerId: value
},
success: function () {
swal({title: "Ajouteé aux favoris", icon: "success"})
document.getElementById("addFav").classList.add('d-none');
document.getElementById("isFav").classList.remove('d-none');
},
error: function () {
alert('error')
}
})
} else {
swal("Ajout annulé");
}
});
}

function isNotRegistered() {
swal({
title: "Ajouter aux annonces favorites?",
text: "Veuillez d'abord vous connecter",
icon: "warning",
buttons: [
"Annuler", "Connexion"
],
dangerMode: false
}).then((willDelete) => {
if (willDelete) {
window.location.href ="{{ path('app_login') }}"
} else {
swal("Annulé");
}
});
}

function isFavorite() {
swal({title: "Annonce déjà favorite", text: "Veuillez consulter vos favoris", icon: "info"})
}

function submitMessage() {
let value = document.querySelector("#messageForm textarea").value

if (value == '') {
swal({title: "Message vide", text: "Veuillez entrer votre message", icon: "info"})
} else {
$.ajax({
url: "{{ path('messages_new', {'id': offer.id}) }}",
type: 'POST',
data: {
message: value
},
success: function () {
swal({title: "Message envoyé", icon: "success"})
document.getElementById("message").value = ''
},
error: function () {
alert('error')
}
})
}
}
				</script>
			{% endblock %}
